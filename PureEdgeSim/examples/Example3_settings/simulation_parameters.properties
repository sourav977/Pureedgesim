# Simulation Parameters File

# Simulation time in minutes
simulation_time=30 
# to launch simulation runs in parallel
parallel_simulation=false
# Update interval (in seconds, used for mobility) set it between 0.1 and 1 (Higher value = low simulation time. Lower value= higher accuracy).
update_interval=1
# Pause length between iterations (in seconds)
pause_length=3

# Display real time charts
display_real_time_charts=true
# Close charts when simulation ends 
auto_close_real_time_charts=false
# Real-time charts refresh interval
charts_update_interval=10
# Save charts as bitmap files
save_charts=false

# We chose a larger simulation area 2000x2000 instead of 200x200 
# simulation area/map (meters) 
# Remember to update the edge data centers location when you change the map size (in the edge_datacenters.xml file)
length=5000
width=5000

# Network range (meters): the distance (radius) in which two devices (or a device and an edge data center) can offload to each others. 
# When a mobile device moves, if it quits this range, the task will be considered as failed due to mobility.
edge_devices_range=10

# Be carefull when setting the edge data centers coverage area when the EDGE_ONLY architecture is used, as some tasks may fail (because no resources found)
# so be sure that edge servers cover all the map, except if your scenario requires low coverage area.

# To ensure that all devices can reach the edge data centers, and that the edge data center can reach one another, we chose a higher value
# By setting it to 1000 we ensure that all the Edge servers cover all the map ( you can chose a higher value)
edge_datacenters_coverage=1500

# Enable registry 
# true : means that the device will download the application from the registry 
#       after receiving the offloaded tasks ( the container size will be used, see applications.xml file)
# false: the device will execute directly the offloaded task (no container will be downloaded 
# The registry in this example is enabled. This means that when a task is offloaded, the corresponding container will be pulled from the registry to execute that task. 
# corn job in our poc runs in a container
enable_registry=true 
registry_mode=CACHE

# you can then compare between registry_mode=CLOUD in which the containers are
# downloaded from the cloud everytime and registry_mode=CACHE in which the
# frequently needed containers are cached in edge devices. Same for
# deploy_orchestrator=CLUSTER and deploy_orchestrator=CLOUD. where the
# orchestrators are deployed on the cluster heads or on the cloud.

# To enable the edge data centers to work cooperatively, we have to deploy one orchestrator on each edge device
# This means that the tasks will be transferred to the nearest Edge data center, which will decide where it will be executed: on the cloud, 
# on another edge data cetner, or execute it locally on this data center.
# run the simulation with "enable_orchestrators=true" and then run it with "enable_orchestrators=false" to compare the results
enable_orchestrators=true

# CLOUD, EDGE_DATACENTER, EDGE_DEVICE
# we must set this to EDGE
deploy_orchestrator=EDGE

# Whether to stop the simulation when the time ends or wait to all the tasks to get executed.
# It is better to wait for all the tasks to get executed to get better results, however, in certain scenarios, this may takes hours.
# Disabling this may give you high tasks failure due to stopping simulation early (see the console) but it will decrease the simulation time.
wait_for_all_tasks=true

# Schedule tasks in batches to reduce the event queue size (to decrease simulation time and memory usage, default = 100)
batch_size=100

# Log settings
# Save the output at the end of simulation 
save_log_file=true
# To delete the output of previous simulations
clear_output_folder=false
# To enable deep logging
deep_log_enabled=ture


# Edge devices count
min_number_of_edge_devices=100
max_number_of_edge_devices=300
edge_device_counter_size=100

# Enabling this will give more accurate results, but also will increase the simulation duration.
realistic_network_model=false

# Network update interval in seconds ( 0.1 to 1= better accuracy but it takes longer, 2 or more = less details but faster simulation)
# Default=1 (to minimize simulation time).
network_update_interval=1

# If true, all data transferred to the cloud will pass through the same wan link and share the same bandwidth, 
# this can be needed in some scenarios. This also will cause many tasks to fail due to latency. 
# So, you can either increase the wan bandwidth, or adjust the tasks latency sensitivity in applications.xml file.
# When disabled, the the WAN real-time chart will not be displayed.
one_shared_wan_network = true

# Network settings   (courtesy of LEAF Simulator)
# Latency is used to determine shortest path when rooting + used to determine if tasks have failed due to high latency
# Bandwidths in megabits per seconds (Mbps)
# WAN settings
wan_bandwidth = 1000
wan_latency = 0.06
wan_nanojoules_per_bit = 46.7 

man_bandwidth = 1000
man_latency = 0.01
man_nanojoules_per_bit = 0 

# WiFi settings
wifi_bandwidth = 1300
wifi_device_transmission_nanojoules_per_bit = 283.17
wifi_device_reception_nanojoules_per_bit = 137.01
wifi_access_point_transmission_nanojoules_per_bit = 23.8
wifi_access_point_reception_nanojoules_per_bit = 23.8
wifi_latency = 0.005

# Ethernet settings
ethernet_bandwidth = 1000
ethernet_nanojoules_per_bit = 40
ethernet_latency = 0.002

# The mobile telecommunication network/ cellular settings (in this case 4g LTE)
cellular_bandwidth = 100
cellular_device_transmission_nanojoules_per_bit = 438.4
cellular_device_reception_nanojoules_per_bit = 51.97
cellular_base_station_nanojoules_per_bit_up_link = 6200
cellular_base_station_nanojoules_per_bit_down_link = 20500
cellular_latency = 0.03


# Task orchestration settings 
# The used architectures, use ',' for multiple values
# Options: CLOUD_ONLY,EDGE_ONLY,MIST_ONLY,MIST_AND_CLOUD,EDGE_AND_CLOUD,MIST_AND_EDGE,ALL 

# We select the Edge_and_Cloud architecture in order to execute the tasks on the Cloud or Edge data centers, 
# we will also use the Cloud_only architecture for comparison
orchestration_architectures=EDGE_ONLY,CLOUD_ONLY,EDGE_AND_CLOUD

# The orchestration algorithm, use ',' for multiple values  
# The used orchetsration algorithm
# also available FUZZY_LOGIC,ROUND_ROBIN 
orchestration_algorithms=ROUND_ROBIN

